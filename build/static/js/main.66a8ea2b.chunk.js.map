{"version":3,"sources":["context/UserContext.js","reducer/types.js","reducer/authReducer.js","helper/jwt.js","components/ui/Errores.js","components/auth/Login.js","components/heroes/HeroScreen.js","components/Home.js","components/ui/Navbar.js","services/Axios.js","components/ui/Search.js","routes/DashboardRoutes.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","types","authReducer","state","action","type","payload","logged","generarJWT","email","Promise","resolve","reject","jwt","sign","process","expiresIn","err","token","console","log","Errores","props","msg","className","role","Login","history","useContext","dispatch","initialState","useState","error","setError","formik","useFormik","initialValues","password","onSubmit","values","getToken","isValid","validate","errors","touched","test","length","axios","post","then","response","data","catch","a","lastPath","localStorage","getItem","replace","handleSubmit","noValidate","name","value","onChange","handleChange","src","HeroScreen","heroCont","heroId","useParams","to","auxHero","find","h","id","image","appearance","biography","work","url","alt","class","gender","height","map","index","race","weight","aliases","occupation","Home","setHeroCont","tipo","setTipo","powers","setPowers","useEffect","powerS","p","powerstats","Combat","reduce","sum","parseInt","combat","Durability","durability","Intelligence","intelligence","Strength","strength","Speed","speed","Power","power","result","Math","max","calculo","onClick","newArr","filter","hadleDelete","Navbar","user","useHistory","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","activeClassName","aria-current","exact","httpInstance","create","baseURL","Search","formValues","setFormValues","hero","setHero","heroTeam","setHeroTeam","getHero","get","results","isValidate","autoComplete","e","preventDefault","target","hT","deleteArray","deletItem","push","resp","heroGood","alignment","heroBad","sendInfo","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","location","pathname","PublicRoute","AppRouter","init","JSON","parse","App","useReducer","stringify","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66a8ea2b.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const UserContext = createContext({});","export const types = {\n    login:  '[auth] login',\n    logout: '[auth] logout',\n}","import { types } from './types';\n\n// const state = {\n//     name: 'Fernando',\n//     logged: true\n// }\n\n\nexport const authReducer = (state = {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            return {\n                ...action.payload,\n                logged: true\n            }\n\n        case types.logout:\n            return {\n                logged: false\n            }\n    \n        default:\n            return state;\n    }\n\n}","import jwt from 'jsonwebtoken'\n\nexport const generarJWT = (email) => {\n\n    return new Promise((resolve, reject) => {\n\n        const payload = { email };\n\n        jwt.sign(payload, process.env.REACT_APP_SECRET_WORD, {\n            expiresIn: '1h'\n        }, (err, token) => {\n\n            if (err) {\n                console.log(err);\n                reject('No se puede generar el tokens')\n            }\n\n            resolve(token)\n        });\n    })\n}\n\nexport const getToken = async () => {\n    const token = await generarJWT('challenge@alkemy.org');\n    console.log(token);\n\n}","import React from 'react'\n\nexport const Errores = (props) => {\n    const { msg } = props\n    return (\n\n        <div className=\"alert alert-danger alert-dismissible fade show text-center\" role=\"alert\">\n            <strong>¡ ERROR ! </strong> &nbsp; {msg}\n        </div>\n    )\n}\n","import React, { useContext, useState } from 'react'\nimport { UserContext } from '../../context/UserContext';\nimport { generarJWT } from '../../helper/jwt';\nimport { types } from '../../reducer/types';\nimport { Errores } from '../ui/Errores';\nimport { useFormik } from 'formik';\nimport axios from 'axios';\n\nexport const Login = ({history}) => {\n\n    const { dispatch, initialState } = useContext(UserContext);\n    const [error, setError] = useState('');\n\n\n    //----Formik validador de ingreso de usuario---////\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n        },\n        onSubmit(values) {\n            //Envio formulario//\n            if ('challenge@alkemy.org' === values.email &&\n                `${process.env.REACT_APP_INITIALSTATE}` === values.password) {\n\n                getToken(values);\n\n            } else {\n                isValid(values);\n            }\n\n        },\n        validate() {\n            //---validador de campos--//\n            const errors = {};\n\n            if (formik.touched.email && !formik.values.email) {\n                errors.email = \"Campo requerido\";\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formik.values.email)\n            ) {\n                errors.email = \"E-mail invalido\";\n            }\n            if (formik.touched.password && !formik.values.password) {\n                errors.password = \"Campo requerido\";\n            } else if (formik.values.password.length <= 3) {\n                errors.password = \"Deve contener al menos 3 caracteres\";\n            }\n            return errors;\n\n        },\n    });\n\n    //---Envio post ingreso errado---///\n    const isValid = (values) => {\n        axios.post(`${process.env.REACT_APP_LOGIN}`, values)\n            .then((response) => {\n                console.log(response.data);\n            }).catch((error) => {\n                setError(\"Please provide valid email and password\")\n            })\n    }\n\n\n    //----metodo que obtienen el token---//\n    const getToken = async (values) => {\n\n        const token = await generarJWT('challenge@alkemy.org');\n        console.log(token);\n\n        const lastPath = localStorage.getItem('lastPath') || '/';\n\n        const { email } = values;\n        dispatch({\n            type: types.login,\n            payload: {\n                email,\n                token\n            }\n\n        })\n        history.replace(lastPath);\n\n    }\n\n    return (\n        <div className=\"login-container p-5\">\n\n            <div className=\"container login-card\">\n\n                <div className=\"row w-100\">\n\n                    <div className=\"col-md-6 col-lg-6 form\">\n\n                        <form className=\"form-group text-center\" onSubmit={formik.handleSubmit} noValidate>\n                            <h2 className=\"text-center mt-2\"> Login</h2>\n                            <div className=\"mb-3 row\">\n                                <label className=\"col-sm-3 col-form-label\">Email:</label>\n                                <div className=\"col-sm-9\">\n                                    <input\n                                        type=\"email\"\n                                        name=\"email\"\n                                        className=\"form-control\"\n                                        value={formik.values.email}\n                                        onChange={formik.handleChange}\n                                    />\n                                    <span className=\"text-danger \">{formik.touched[\"email\"] && formik.errors[\"email\"]}</span>\n                                </div>\n                            </div>\n                            <div className=\"mb-3 row\">\n                                <label className=\"col-sm-3 col-form-label\">Contraseña:</label>\n                                <div className=\"col-sm-9\">\n                                    <input\n                                        type=\"password\"\n                                        name=\"password\"\n                                        className=\"form-control\"\n                                        value={formik.values.password}\n                                        onChange={formik.handleChange}\n                                    />\n                                    <span className=\"text-danger \">{formik.touched[\"password\"] && formik.errors[\"password\"]}</span>\n                                </div>\n                            </div>\n                            <button className=\"btn btn-primary mb-3\" type=\"submit\">Login</button>\n\n                            {\n                                error &&\n                                <Errores msg={error} />\n                            }\n\n                        </form>\n                    </div>\n\n                    <div className=\"col-md-6 col-lg-6\">\n                        <img src={process.env.PUBLIC_URL+\"/assets/img/heroes.png\"} className=\"login-img img-fluid\" />\n\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useContext } from 'react'\nimport { Link, Redirect, useParams } from 'react-router-dom'\nimport { UserContext } from '../../context/UserContext'\n\n\nexport const HeroScreen = () => {\n\n    const { heroCont } = useContext(UserContext);\n\n    const { heroId } = useParams();\n\n\n\n    if (heroCont == 0) {\n        return <Redirect to=\"/\" />\n    }\n\n    if (!heroId) {\n        return < Redirect to=\"/\" />\n    }\n\n    const auxHero = heroCont.find(h => h.id === heroId);\n\n    const { image, name, appearance, biography, work } = auxHero\n\n    return (\n        <div className=\"row g-0 border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative mt-4\">\n            <div className=\"col-md-5 col-lg-5\">\n                <div className=\"overflow\" >\n                    <img src={image.url} alt=\"...\" className=\"card-img-top\" />\n                </div>\n                <Link className=\"d-grid gap-2 btn btn-danger mt-2\" to=\"/\">Regresar</Link>\n            </div>\n            <div className=\"col d-flex flex-column position-static\">\n                <div className=\"card-body text-center\">\n                    <strong class=\"d-inline-block mb-2\">Apariencia</strong>\n                    <hr />\n                    <h2 className=\"card-title\">{name}</h2>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 col-lg-6\">\n                            Color de ojos: {/*appearance.eye-color*/}<br />\n                        Genero: {appearance.gender} <br />\n                            <h4>Altura</h4>\n                            <ul>\n                                {\n                                    appearance.height.map((h, index) => (\n                                        <li className=\"style-li\" key={index}>{h}&nbsp;&nbsp;&nbsp;</li>\n                                    ))\n                                }\n                            </ul>\n                        </div>\n                        <div className=\"col-md-6 col-lg-6\">\n                            Raza: {appearance.race}<br />\n                        Color de cabello: {/*appearance.hair-color*/}<br />\n                            <h4>Peso</h4>\n                            <ul>\n                                {\n                                    appearance.weight.map((h, index) => (\n                                        <li className=\"style-li\" key={index}>{h} &nbsp; &nbsp;</li>\n                                    ))\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                    <h4>Alias</h4>\n                    <ul>\n                        {\n                            biography.aliases.map((h, index) => (\n                                <li className=\"style-li\" key={index}>{h}, </li>\n                            ))\n                        }\n                    </ul>\n                    <h4 className=\"card-title\">Trabajo</h4>\n                    <p className=\"card-text\">{work.occupation}</p>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Fragment, useContext, useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\n\nexport const Home = () => {\n\n    const { heroCont, setHeroCont } = useContext(UserContext);\n    const [tipo, setTipo] = useState('');\n    const [powers, setPowers] = useState([])\n\n    const calculo = () => {\n        const powerS = heroCont.map(p => p.powerstats);\n\n        const Combat = powerS.reduce((sum, value) => ((parseInt(value.combat) ? \"null\" : 0) ? sum + parseInt(value.combat) : sum), 0)\n        const Durability = powerS.reduce((sum, value) => ((parseInt(value.durability) ? \"null\" : 0) ? sum + parseInt(value.durability) : sum), 0)\n        const Intelligence = powerS.reduce((sum, value) => ((parseInt(value.intelligence) ? \"null\" : 0) ? sum + parseInt(value.intelligence) : sum), 0)\n        const Strength = powerS.reduce((sum, value) => ((parseInt(value.strength) ? \"null\" : 0) ? sum + parseInt(value.strength) : sum), 0)\n        const Speed = powerS.reduce((sum, value) => ((parseInt(value.speed) ? \"null\" : 0) ? sum + parseInt(value.speed) : sum), 0)\n        const Power = powerS.reduce((sum, value) => ((parseInt(value.power) ? \"null\" : 0) ? sum + parseInt(value.power) : sum), 0)\n\n        setPowers([Combat, Durability, Intelligence, Strength, Speed, Power]);\n\n        let result = Math.max(Combat, Durability, Intelligence, Strength, Speed, Power);\n\n        const Mayor = Combat == result ? \"Combat\" :\n            Durability == result ? \"Durability \" :\n                Intelligence == result ? \"Intelligence\" :\n                    Strength == result ? \"Strength\" :\n                        Speed == result ? \"Speed\" :\n                            Power == result ? \"Power\" : null;\n        setTipo(Mayor);\n    }\n\n    useEffect(() => {\n        calculo();\n    }, [heroCont])\n\n    const hadleDelete = (id) => {\n        const newArr = heroCont.filter((h) => h.id !== id);\n        setHeroCont(newArr)\n    }\n\n    return (\n        <>\n            {\n                heroCont == 0 ?\n\n\n                    (\n                        <div className=\"py-5 text-center container\">\n                            <div className=\"row py-lg-5\">\n                                <div className=\"col-lg-6 col-md-8 mx-auto\">\n                                    <h2 className=\"text-white\">Equipo de Heroes</h2>\n                                    <p className=\"lead text-white\">Crea tu propio equipo de heroes y villanos. En el conoceras el tipo de equipo que tienes, ademas la sumatoria de poderes de sus personajes. Para crear tu equipo debes dirigirte a la seccion buscar Heroes. ¿Empezamos?</p>\n                                    <p>\n                                        <Link to=\"Search\" className=\"btn btn-primary my-2\">Buscar Heroes</Link>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>) :\n\n\n\n\n                    (\n                        <Fragment>\n                            <div className=\"row\">\n                                <div className=\"col-lg-6 col-md-8 mx-auto text-center\">\n                                    <h4 className=\"lead text-white\">Acumulado de poderes</h4>\n                                </div>\n                            </div>\n\n                            <div className=\"text-white text-center\">\n                                Combate: <span className=\"span text-primary\">{powers[0]}</span> &nbsp; Durabilidad: <span className=\"span text-primary\">{powers[1]}</span> &nbsp; Inetligencia: <span className=\"span text-primary\">{powers[2]}</span> &nbsp; Fuerza: <span className=\"span text-primary\">{powers[3]}</span> &nbsp; Velocidad: <span className=\"span text-primary\">{powers[4]}</span>  &nbsp; Poder: <span className=\"span text-primary\"> {powers[5]}</span>\n                                <h4 className=\"text-white\">Tipo de Equipo: <span className=\"text-primary h1\">{tipo}</span></h4>\n                            </div>\n\n                            <div className=\"album py-3\">\n                                <div className=\"home-container\">\n\n                                    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\n                                        {\n                                            heroCont.map((h) => (\n\n                                                <div className=\"col\" key={h.id}>\n\n                                                    <div className=\"card shadow-sm\">\n\n                                                        <div className=\"overflow\">\n                                                            <img src={h.image.url} className=\"card-img-top\" alt=\"...\" />\n                                                        </div>\n\n                                                        <div className=\"card-body justify-content-center\">\n                                                            <h3 className=\"card-title text-center \"><b>{h.name}</b></h3>\n                                                            <div className=\"row\">\n                                                                <div className=\"col-md-4 col-lg-4\">\n                                                                    <b>Poderes:</b>\n                                                                </div>\n                                                                <div className=\"col-sm col-md\">\n                                                                    <ul>\n                                                                        <li className=\"card-text\">Combate: <b>{h.powerstats.combat}</b></li>\n                                                                        <li className=\"card-text\">Durabilidad: <b>{h.powerstats.durability}</b></li>\n                                                                        <li className=\"card-text\">Inteligencia:<b>{h.powerstats.intelligence}</b> </li>\n                                                                        <li className=\"card-text\">Fuerza:<b>{h.powerstats.strength}</b> </li>\n                                                                        <li className=\"card-text\">Velocidad: <b>{h.powerstats.speed}</b></li>\n                                                                        <li className=\"card-text\">Poders: <b>{h.powerstats.power}</b></li>\n                                                                    </ul>\n                                                                </div>\n\n                                                            </div>\n                                                            <div className=\"d-flex justify-content-center align-items-center\">\n                                                                <div className=\"btn-group\">\n                                                                    <Link className=\"btn btn-primary\" to={`/hero/${h.id}`}> +Más</Link>\n                                                                    <button className=\"btn btn-danger\" onClick={() => { hadleDelete(h.id) }}>Quitar</button>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </div>\n                                                </div>))\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </Fragment>\n                    )\n            }\n        </>\n    )\n}\n","import React, { useContext } from 'react'\nimport { NavLink, Link, useHistory } from 'react-router-dom'\nimport { UserContext } from '../../context/UserContext'\nimport { types } from '../../reducer/types';\n\nexport const Navbar = () => {\n\n    const { user, dispatch } = useContext(UserContext);\n    const history = useHistory();\n\n    const handleLogout = () => {\n        history.replace('/');\n        dispatch({\n            type: types.logout\n        })\n    }\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark p-3\">\n            <div className=\"container-fluid\">\n                <Link\n                    className=\"navbar-brand\"\n                    to=\"/\">\n                    <h2>Heroes Teams</h2>\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <NavLink\n                                activeClassName=\"active\"\n                                className=\"nav-link\"\n                                aria-current=\"page\"\n                                exact to=\"/\">Home</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink\n                                activeClassName=\"active\"\n                                className=\"nav-link\"\n                                exact to=\"/Search\">Search</NavLink>\n                        </li>\n                    </ul>\n\n                    <div className=\"d-flex\">\n                        <span className=\"span text-primary me-2\"> {user.email}</span>\n                        <button className=\"btn text-light\" onClick={handleLogout} >Logout</button>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n","import axios from 'axios';\n\nconst httpInstance= axios.create({\n    baseURL:`${process.env.REACT_APP_API_URL}`\n});\nexport default httpInstance;","import { ErrorMessage } from 'formik';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { UserContext } from '../../context/UserContext'\nimport axios from '../../services/Axios'\nimport { Errores } from './Errores';\n\n\nexport const Search = ({history}) => {\n    \n    const { heroCont, setHeroCont } = useContext(UserContext);\n\n    const [formValues, setFormValues] = useState({\n        name: \"\"\n    })\n\n    const [hero, setHero] = useState([]);\n    const [heroTeam, setHeroTeam] = useState([]);\n    const [error, setError] = useState('');\n\n\n    //---Form---//\n\n    const { name } = formValues;\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        getHero(name);\n    }\n\n    const change = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    }\n\n    const getHero = async (name) => {\n        const { data } = await axios.get(`search/${name}`);\n        const { results } = data;\n        if (isValidate(name, results)) {\n            setHero(results);\n        }\n    }\n\n    const isValidate = (name, results) => {\n        if (name.length === 0) {\n            return setError('Ingrese una letra');\n        }\n        if (!results) {\n            return setError('No existe personaje con ese nombre');\n        }\n        setError(null)\n        return true\n    }\n\n\n    //----Corrobora Heroes para poder cargarlos al Home----//\n\n    console.log(error);\n    const sendInfo = (h) => {\n\n        const heroId = heroTeam.find(resp => resp.id === h.id);\n        const heroGood = heroTeam.filter(resp => resp.biography.alignment === \"good\");\n        const heroBad = heroTeam.filter(resp => resp.biography.alignment === \"bad\");\n\n        if (heroGood.length > 3) {\n            return setError(\"Existen mas de 3 personajes buenos\")\n        } else {\n            setError(\"\")\n        }\n\n        if (heroBad.length > 3) {\n            return setError(\"Existen mas de 3 personajes malvados\")\n        } else {\n            setError(\"\")\n        }\n\n        if (!heroId) {\n            if (heroTeam.length < 6) {\n\n                setHeroTeam([\n                    ...heroTeam,\n                    h\n                ])\n                console.log(heroTeam)\n            } else {\n                setError('El quipo no puede contener mas de 6 personajes');\n            }\n        } else { setError('Este heroe ya fue cargado') }\n    }\n\n\n    //---borra heroes de la lista de equipos antes de enviarlos al home--//\n\n    const deletItem = (id) => {\n        const deleteArray = heroTeam.filter((h) => h.id !== id);\n        setHeroTeam(deleteArray);\n    }\n\n\n    //--Asignamos el quipo de herues a contex para tener acceso a los mismos desde el home--//\n\n    const equipoListo = () => {\n        setHeroCont(\n            heroTeam\n        )\n        history.push(\"/\");\n    }\n\n    return (\n        <div className=\"search-component py-4\">\n        <h2 className=\"text-white\">Buscarcar Heroe</h2>\n        <div className=\"row\">\n            <div className=\"col-md-4 col-lg-4\">\n\n                <form autoComplete=\"off\" onSubmit={handleSearch}>\n                    <div className=\"input-group mb-3\">\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"name\"\n                            value={name}\n                            onChange={change}\n                        />\n                        <button className=\"btn btn-lg btn-outline-success\" type=\"submit\">Search</button>\n                    </div>\n                </form>\n\n                <div className=\"content-team mb-2\">\n\n                    {heroTeam.length === 0 ?\n                        (<div className=\"alert alert-warning text-center\">\n                            <strong>No has seleccionado Heroe para tu Equipo</strong>\n                        </div>\n                        )\n                        :\n                        (\n                            <div className=\"card \">\n                                <div className=\"card-header text-center\">\n                                    Heroes Seleccionados\n                                </div>\n                                <ul className=\"list-group list-group-flush\">\n                                    {\n                                        heroTeam.map((hT, index) => (\n                                            <li key={hT.id} className=\"list-group-item d-flex justify-content-between \">\n                                                <span className=\"\">{hT.name}</span>\n                                                <button className=\"btn btn-sm btn-danger\" onClick={() => { deletItem(hT.id) }}>X</button>\n                                            </li>))\n                                    }\n                                </ul>\n                                <button className=\"btn btn-sm btn-success mb-2\" onClick={equipoListo}>Equipo Listo</button>\n                            </div>\n                        )\n                    }\n\n                </div>\n\n\n            </div>\n            <div className=\"col-md col-lg\">\n\n                {\n                    error &&\n                    <Errores msg={error}/>\n                }\n\n                {hero.length === 0 ?\n                    (<div className=\"alert alert-warning text-center\">\n                       <strong> Busca a tu Heroe o Villano favorito para armar tu equipo</strong>\n                    </div>\n                    )\n                    : (\n                        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n                            { hero.map((h) => (\n                                <div key={h.id} className=\"col\">\n                                    <div className=\"card\">\n                                        <img src={h.image.url} className=\"card-img-top\" alt=\"...\" />\n                                        <div className=\"card-body\">\n                                            <h5 className=\"card-title\">{h.name}</h5>\n                                            <button className=\"btn btn-primary\" onClick={() => { sendInfo(h) }}>Agregar</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    )\n                }\n\n            </div>\n        </div>\n\n    </div>\n    )\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { HeroScreen } from '../components/heroes/HeroScreen'\nimport { Home } from '../components/Home'\nimport { Navbar } from '../components/ui/Navbar'\nimport { Search } from '../components/ui/Search'\n\n\nexport const DashboardRoutes = () => {\n    return (\n        <>\n            <Navbar />\n            <div className=\"container\">\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route exact path=\"/hero/:heroId\" component={HeroScreen} />\n                    <Route exact path=\"/search\" component={ Search } />\n                    \n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useContext } from 'react'\nimport { BrowserRouter as Router,Switch } from 'react-router-dom'\nimport { Login } from '../components/auth/Login'\nimport { UserContext } from '../context/UserContext'\nimport { DashboardRoutes } from './DashboardRoutes'\nimport { PrivateRoute } from './PrivateRoute'\nimport { PublicRoute } from './PublicRoute'\n\n\nexport const AppRouter = () => {\n\n    const { user } = useContext(UserContext);\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={Login}\n                        isAuthenticated={user.logged} />\n\n                    <PrivateRoute\n                        path=\"/\"\n                        component={DashboardRoutes}\n                        isAuthenticated={user.logged} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React, { useEffect, useReducer, useState } from 'react'\nimport { UserContext } from './context/UserContext';\nimport { authReducer } from './reducer/authReducer';\nimport { AppRouter } from './routes/AppRouter';\nimport './App.css'\n\nconst init = () => {\n  return JSON.parse(localStorage.getItem('user')) || { logged: false };\n}\n\n\nexport const App = () => {\n\n  const [user, dispatch] = useReducer(authReducer, {}, init);\n\n  useEffect(() => {\n    localStorage.setItem('user', JSON.stringify(user));\n  }, [user])\n\n  const [heroCont, setHeroCont] = useState([])\n\n  return (\n    <UserContext.Provider value={{ heroCont, setHeroCont, user, dispatch, }}>\n      <AppRouter />\n    </UserContext.Provider>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { App } from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}